import React, {useContext, useEffect, useState } from "react";
import useWindowSize from "../src/CustomHooks/UseWindows";
import { Input, Button, Flex, Wrap} from "@chakra-ui/react";
import Head from "next/head";
import Colors from "../src/Constants/Colors";
import { useClient, useStart, useUsers, useAppID, useToken, useChannelName } from "../src/Context/ClientContext"
import NavigationBar from "../src/Components/dashboard/NavigationBar"
import VideoCall from "../src/Components/VideoConference/VideoCall";

export default function VideoConference() {
    const [channelName, setChannelName] = useChannelName();
    const [appId, setappId] = useAppID();
    const [token, setToken] = useToken();
    const setUsers = useUsers();
    const [start, setStart] = useStart();
    const getWindowSize = useWindowSize();
    const [inCall, setInCall] = useState(false);

    const options = {
      // Pass your app ID here.
      appId: "cd305ea814d54bdf87aa48ffe4af8363",
      // Set the channel name.
      channel: "TYTO",
      // Pass a token of App Certificate.
      token: "006cd305ea814d54bdf87aa48ffe4af8363IAAo05ER+80pkZB5G4erPD1hL50gnXdpnbR1IXF8mLTHN4eW8j4AAAAAEACHtvL/euxzYQEAAQB17HNh",
      // Set the user ID.
      uid: 123456
    };

    let rtc = {
        localAudioTrack: null,
        localVideoTrack: null,
        client: null
    };
  
    
    

    return (
        <>
          <Head>
          <title>Video Conference</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          </Head>
          <NavigationBar />
          <Flex {...styleProps.indexWrapper} 
            height= "100%"
            overflow= "auto"
            maxHeight = "200vh"
            position = "relative">
        <Wrap
          w={
            getWindowSize.width < 960
              ? getWindowSize.width * 0.7
              : getWindowSize.width * 0.978
          }
          h={getWindowSize.height < 960
            ? getWindowSize.height * 0.824
            : getWindowSize.height * 0.808}
          {...styleProps.vidCardContainer}>

          {inCall ? (
          <VideoCall setInCall={setInCall} />
          ) : (
          <Button
            variant="solid"
            color="primary"
            onClick={() => setInCall(true)}
          >
            Join Call
          </Button>
        )}
          </Wrap>

          {/* <Flex
          w={
            getWindowSize.width < 960
              ? getWindowSize.width * 0.7
              : getWindowSize.width * 0.2
          }
          h={getWindowSize.height < 960
            ? getWindowSize.height * 0.95
            : getWindowSize.height * 1}
          {...styleProps.vidCardContainer}>

          </Flex> */}
        </Flex>
        </>
    )
}
const styleProps = {
    indexWrapper: {
      flexDirection: "column",
      alignItems: "left",
      padding:"20px",
      justifyContent: "center",
      bgColor: Colors.black,
      justifyContent: "space-between",
    },
    videos: {
        position: "relative",
        borderRadius: "20px",
        justifyContent: "space-between",
        bgColor: Colors.black, 
        borderRadius: "lg",
        shadow: "lg",
      },
    vidCardContainer: {
    mt: "3vh",
    bgColor: Colors.black,
    alignItems: "center",
    borderRadius: "lg",
    padding: "1vh",
    shadow: "lg"
  },

  chatCardContainer: {
    flexDirection: "column",
    bgColor: Colors.cyan,
    alignItems: "left",
    borderRadius: "lg",
    shadow: "lg",
    padding: "35",
  },

  };



